#include "RoomConstructor.hpp"

using namespace std;

RoomConstructor::RoomConstructor(const Vec2<double>& pos, RoomIndex current_room) : Object(pos) {
    this->current_room = current_room;
}

void RoomConstructor::step() {
    if (current_room == RoomIndex::title) {
        room->add_instance(new Title(Vec2<int>{ 16, 9 } *-6));
    }
    else if (current_room == RoomIndex::stage1) {
        room->add_instance(new Player({ 100, 20 }));
        int arr[40][40] = {
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1},
            {1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
            {1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,0,0,0,0,0,5,1},
            {1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,1,0,0,0,1,0,1,1,1},
            {1,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,6,0,0,0,0,0,0,1},
            {1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,1,1,1,1,1,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1},
            {1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,1,0,0,0,1,0,1,1,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,6,0,0,1,0,0,0,1},
            {1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}

        };
        for (int i = 0; i < ssize(arr); i++) {
            for (int j = 0; j < ssize(arr[0]); j++) {
                if (arr[i][j] == 1) room->add_instance(new Block({ -100.0 + j * 10.0, -100 + i * 10.0 }));
                if (arr[i][j] == 2) room->add_instance(new Goal({ -100.0 + j * 10.0, -100 + i * 10.0 }, RoomIndex::stage2));
                if (arr[i][j] == 6) room->add_instance(new BulletBlock({ -100.0 + j * 10.0, -100 + i * 10.0 }, 0));
                if (arr[i][j] == 7) room->add_instance(new BulletBlock({ -100.0 + j * 10.0, -100 + i * 10.0 }, 2));
                if (arr[i][j] == 4) room->add_instance(new Battery({ -100.0 + j * 10.0, -100 + i * 10.0 }));
                if (arr[i][j] == 5) room->add_instance(new Key({ -100.0 + j * 10.0, -100 + i * 10.0 }));
            }
        }
    }
    else if (current_room == RoomIndex::stage2) {
        room->add_instance(new Player({ 100, 20 }));
        int arr[40][40] = {
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1},
            {1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
            {1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,0,0,0,0,0,5,1},
            {1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,1,0,0,0,1,0,1,1,1},
            {1,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,0,1},
            {1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,1,1,1,1,1,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1},
            {1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,1,0,0,0,1,0,1,1,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,3,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
            {1,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1},
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
            {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}

        };
        for (int i = 0; i < ssize(arr); i++) {
            for (int j = 0; j < ssize(arr[0]); j++) {
                if (arr[i][j] == 1) room->add_instance(new Block({ -100.0 + j * 10.0, -100 + i * 10.0 }));
                if (arr[i][j] == 2) room->add_instance(new Goal({ -100.0 + j * 10.0, -100 + i * 10.0 }, RoomIndex::title));
                if (arr[i][j] == 3) room->add_instance(new BulletBlock({ -100.0 + j * 10.0, -100 + i * 10.0 }, 2));
                if (arr[i][j] == 4) room->add_instance(new Battery({ -100.0 + j * 10.0, -100 + i * 10.0 }));
                if (arr[i][j] == 5) room->add_instance(new Key({ -100.0 + j * 10.0, -100 + i * 10.0 }));
            }
        }
    }
    room->del_instance(this);
}